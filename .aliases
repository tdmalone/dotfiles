
# Shell aliases.

# Make sudo work with aliases.
# @see https://askubuntu.com/a/22043/421637
#alias sudo="sudo "

# Some quick ls aliases.
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Laziness ;).
alias e="exit"
alias u="source ~/.zshrc && echo zsh configuration reloaded"
alias al='c9 open ~/.aliases'
alias en='c9 open ~/.env'
alias alv='vi ~/.aliases'

# Cloud9.
alias code='c9 open'
alias open='c9 open'

# Python.
alias pip="pip3"
alias python="python3"
alias pl="pylint lambda_function.py | less"
alias py="pl"

# Git.
# Note that git aliases themselves should be defined in .gitconfig.
alias ga="git add"
alias gaa="git add ."
alias gam="git amend"
alias gap="git add -p"
alias gb="git branch"
alias gba="gbash"
alias gbash="echo && echo 'Opening git bash in a new Window. Press Ctrl+C in that Window to start using it.' && c:/progra~1/git/git-bash.exe &"
alias gc="git commit"
alias gcam="git commit -am"
alias gce="git commit --allow-empty -m 'Empty commit for testing'"
alias gcm="git commit -m"
alias gcmvb="git commit -m \"Version bump\" && gt"
alias gcmvbc="git commit -m \"Version bump; changelog\" && gt"
alias gco="git checkout"
alias gcob="git checkout -b"
alias gcom="git checkout master"
alias gd="git diff"
alias gdb="git delbranch"
alias gdc="git diff --cached"
alias gf="git fix"
alias gg="git grep -i"
alias gh="git hub"
alias gl="git latest"
alias gm="git merge"
alias gn="git noff"
alias gnb="git newbranch"
alias gp="git push"
alias gpl="git pull"
alias gpuo="git push -u origin"
alias gr="git remote -vv"
alias grso="git remote set-url origin"
alias gs="git status"
alias gt="git tag"
alias gu="git update"
alias bfg="java -jar ~/bfg.jar"

# Yarn.
alias y="yarn"
alias yb="yarn build"
alias ye="yarn execute"
alias yf="yarn fix"
alias yl="yarn lint"
alias yp="yarn publish"
alias yt="yarn test"
#alias yli="yarn link && cd $(cygpath $LOCALAPPDATA)/Yarn/config/global && yarn link $1"

# Composer.
alias c="composer"
alias cl="composer lint"
alias ct="composer test"

# Webpack.
alias webpack="yarn webpack"
alias yw="yarn webpack"

# Make.
alias ml="make lint"
alias mt="make test"

# Travis CI CLI.
alias tm="travis monitor"

# Pantheon terminus CLI.
alias terminus=~/vendor/bin/terminus

# Ansible/Packer/Terraform/Vagrant.
alias an='ansible'
alias pk='packer'
alias t='terraform'
alias tf='terraform'
alias vg='vagrant'
alias tfa='tf apply'
alias ta='tf apply'
alias tfi='tf init'
alias ti='tf init'
alias tfp='tf plan'
alias tp='tf plan'

# Gulp & Slush.
alias cwp="slush chromatix-wp"
alias cwpu="slush chromatix-wp-undo"
alias scwp="slush chromatix-wp"
alias scwpu="slush chromatix-wp-undo"
alias g="gulp"
alias glh="gulp lint:html"
alias gli="gulp lint"
alias glj="gulp lint:js"
alias glp="gulp lint:php"
alias gls="gulp lint:sass"
alias gre="gulp release"
alias gv="gulp version"

# Lint fixing.
alias lfj="git ls-tree -r HEAD | grep \"\\.js$\" | awk '{print \$4}' | xargs node_modules/.bin/eslint --ignore-pattern '!.*.js' --fix"
alias lfs="git ls-tree -r HEAD | grep \"\\.scss$\" | awk '{print \$4}' | xargs node_modules/.bin/stylelint --fix"
alias lfp="git ls-tree -r HEAD | grep \"\\.php$\" | awk '{print \$4}' | xargs vendor/bin/phpcbf"
alias lf="lfj && lfs && lfp"

# Docker.
# WARNING: Some of these have only been tested in Git Bash on Windows.
# TODO: See more at https://github.com/tcnksm/docker-alias/blob/master/zshrc

# Build in the current directory.
alias dbuild="docker build -t \$(basename \$(pwd)) \$(pwd)"

# Run bash in a Docker container, assuming the container is named (your current basename)Instance.
alias dbash="docker start \$(basename \$(pwd))Instance && docker exec -it \$(basename \$(pwd))Instance bash"

# Stop and remove ALL Docker containers.
alias drmc="echo && echo 'Removing all Docker containers...' && echo && docker ps -a | awk '{print \$1}' | grep -v CONTAINER | xargs -r docker stop | xargs -r docker rm"

# Remove ALL Docker images.
alias drmi="echo && echo 'Removing all Docker images...' && echo && docker images | awk '{print \$3}' | grep -v IMAGE | xargs -r docker rmi"

alias drunv="docker run -d -p 8080:80 -p 8081:443 -v '\$(pwd)'/src:/var/www/html/src --name \$(basename \$(pwd))Instance \$(basename \$(pwd))"
alias drun="docker run -d -p 8080:80 -p 8081:443 --name \$(basename \$(pwd))Instance \$(basename \$(pwd))"
alias dlog="docker logs \$(basename \$(pwd))Instance"
alias dstop="docker stop \$(basename \$(pwd))Instance"
alias dstart="docker start \$(basename \$(pwd))Instance"
alias datt="docker attach \$(basename \$(pwd))Instance" # Reattach a terminal & stdin.
alias drs="docker restart \$(basename \$(pwd))Instance"
alias drm="dstop && docker rm \$(basename \$(pwd))Instance"
alias dps="docker ps -a"
alias di="docker images"

# TODO: Add a command that will docker rmi on any <none>'s in column 1 of docker images.

# Enter a failed build container at the point it failed.
# TODO: This doesn't run the final command yet due to xargs not coming from a tty.
alias denter="docker ps -a | awk '{print \$1}' | awk 'NR==2' | xargs -r docker commit | sed s/sha256:// | xargs -r -I % echo Run this command: docker run -it % bash -il"

# Test a Lambda function in the current directory.
alias lambda="docker run --rm -v \$(pwd):/var/task lambci/lambda index.handler"

# Hadolint for Dockerfiles.
alias hadolint='docker run --rm -i hadolint/hadolint < Dockerfile'
alias hl='hadolint'
