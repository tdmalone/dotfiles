# shellcheck shell=bash
# shellcheck disable=SC2142

# Disabled directives:
# https://github.com/koalaman/shellcheck/wiki/SC2142 - positional params are quoted

# Make sudo work with aliases. May not work properly though...
# @see https://askubuntu.com/a/22043/421637
#alias sudo='sudo '

##########################
# New, unsorted aliases
##########################

# ...

##########################
# Assorted aliases
##########################

# Laziness ;).
alias azl='az login'
alias conn='ping 61.88.88.88'
alias cls='clear'
alias disk='sudo du -d1 -hx | sort -rh'
alias e='exit'
alias ex='export'
alias kb='keybase'
alias ll='ls -alFA'
alias l='ll'
alias headers='curl --silent --location --dump-header /dev/stdout --output /dev/null'
alias hl='heroku local'
alias hlog='heroku logs --tail'
alias ngrok='~/ngrok http --subdomain tdmalone --region au'
alias ng='ngrok'
alias ng5k='ngrok 5000'
alias s='sudo su -'
alias scwd='sudo su'
alias screen='screen -rd || screen'
alias sc='screen -rd || screen'
alias tm='tmux attach || tmux'
alias tms='tmux source-file ~/.tmux.conf && echo tmux configuration reloaded'
alias trace='traceroute'
alias tracert='traceroute'
alias u='source ~/.zshrc && echo zsh configuration reloaded'

# Quick file opens.
# The 'open' command is defined as an alias in .env on each system, eg. to 'code' or 'c9 open'.
alias al='open ~/.aliases'
alias alvi='vi ~/.aliases'
alias en='open ~/.env'
alias envi='vi ~/.env'
alias sshc='open ~/.ssh/config'
alias sshcvi='vi ~/.ssh/config'
alias gitc='open ~/.gitconfig'

# Generates a 4096 bit RSA key with an empty passphrase, expecting a comment to be passed in.
alias sshk='ssh-keygen -t rsa -f sshkey-"$( date +%Y%m%d-%H%M%S )" -b 4096 -P "" -C'
alias sshkey='sshk'

# Other stuff.
alias art='php artisan'
alias dda='sudo datadog-agent'
alias flushdns='sudo killall -HUP mDNSResponder' # Only useful on Macs.
alias gpglk='gpg --list-keys --keyid-format short'
alias wx='curl wttr.in/melbourne'
alias calc='bc --quiet'

##########################
# Lint fixing
##########################

alias el='DEBUG=eslint:cli-engine eslint --color --env es6:true --parser-options ecmaVersion:9 *.js'

alias lf='lfj && lfs && lfp'
alias lfj="git ls-tree -r HEAD | grep \"\\.js$\" | awk '{print \$4}' | xargs node_modules/.bin/eslint --ignore-pattern '!.*.js' --fix"
alias lfs="git ls-tree -r HEAD | grep \"\\.scss$\" | awk '{print \$4}' | xargs node_modules/.bin/stylelint --fix"
alias lfp="git ls-tree -r HEAD | grep \"\\.php$\" | awk '{print \$4}' | xargs vendor/bin/phpcbf"

##########################
# Ansible
##########################

alias an='ansible'

alias ag='ansible-galaxy'
alias agi='ag install'

alias ap='ansible-playbook --diff'
alias apm='ap main.yml'
alias apml='apm -l'
alias apmt='apm -t'
alias apb='ap'
alias apbm='apm'
alias book='ap'

alias upd='updall -l'
alias updall='apb ~/Documents/astute/tools/tim-tools/tim-playbook.yml'

function apmv() {
  ANSIBLE_VAULT_PASSWORD_FILE=~/.ansible/$1 apm
}

function aves() {
  ANSIBLE_VAULT_PASSWORD_FILE=~/.ansible/$1 ansible-vault encrypt_string
}

# TODO.
alias ad='ansible localhost -m debug -a 'var=ENTER_VAR_HERE' --vault-password-file=~/.ansible/ENTER_VAULT_PASSWORD_FILE_HERE'
alias ae='ansible-vault encrypt_string --vault-id=ENTER_VAULT_NAME_HERE@prompt --encrypt-vault-id ENTER_VAULT_NAME_HERE'

##########################
# AWS CLI
##########################

function dam() {
  aws sts decode-authorization-message --encoded-message "${1}" | jq '.DecodedMessage | fromjson'
}

##########################
# Composer
##########################

alias c='composer'
alias cl='composer lint'
alias ct='composer test'

##########################
# Docker
##########################

# WARNING: Some of these have only been tested in Git Bash on Windows.
# TODO: See more at https://github.com/tcnksm/docker-alias/blob/master/zshrc

# Build in the current directory.
alias dbuild="docker build -t \$(basename \$(pwd)) \$(pwd)"

# Run bash in a Docker container, assuming the container is named (your current basename)Instance.
alias dbash="docker start \$(basename \$(pwd))Instance && docker exec -it \$(basename \$(pwd))Instance bash"

# Stop and remove ALL Docker containers.
alias drmc="echo && echo 'Removing all Docker containers...' && echo && docker ps -a | awk '{print \$1}' | grep -v CONTAINER | xargs -r docker stop | xargs -r docker rm"

# Remove ALL Docker images.
alias drmi="echo && echo 'Removing all Docker images...' && echo && docker images | awk '{print \$3}' | grep -v IMAGE | xargs -r docker rmi"

# Assorted Docker aliases.
alias drunv="docker run -d -p 8080:80 -p 8081:443 -v '\$(pwd)'/src:/var/www/html/src --name \$(basename \$(pwd))Instance \$(basename \$(pwd))"
alias drun="docker run -d -p 8080:80 -p 8081:443 --name \$(basename \$(pwd))Instance \$(basename \$(pwd))"
alias dlog="docker logs \$(basename \$(pwd))Instance"
alias dstop="docker stop \$(basename \$(pwd))Instance"
alias dstart="docker start \$(basename \$(pwd))Instance"
alias datt="docker attach \$(basename \$(pwd))Instance" # Reattach a terminal & stdin.
alias drs="docker restart \$(basename \$(pwd))Instance"
alias drm="dstop && docker rm \$(basename \$(pwd))Instance"
alias dps="docker ps -a"
alias di="docker images"

# TODO: Add a command that will docker rmi on any <none>'s in column 1 of docker images.

# Enter a failed build container at the point it failed.
# TODO: This doesn't run the final command yet due to xargs not coming from a tty.
alias denter="docker ps -a | awk '{print \$1}' | awk 'NR==2' | xargs -r docker commit | sed s/sha256:// | xargs -r -I % echo Run this command: docker run -it % bash -il"

# Test a Lambda function in the current directory using LambCI's Docker images.
alias lambda="docker run --rm -v \$(pwd):/var/task lambci/lambda index.handler"

##########################
# Git
##########################

# Note that git aliases themselves should be defined in .gitconfig.

alias bfg='java -jar ~/bfg.jar'

alias ga='git add'
alias gaa='git add .'
alias gam='git amend'
alias gap='git add --patch'

alias gb='git branch'

alias gc='git commit'
alias gcam='git commit --all -m'
alias gce="git commit --allow-empty -m 'Empty commit for testing'"
alias gcm='git commit -m'
alias gcmvb="git commit -m \"Version bump\" && gt"
alias gcmvbc="git commit -m \"Version bump; changelog\" && gt"
alias gco='git checkout'
alias gcob='git checkout -b'
alias gcom='git checkout master'

alias gd='git diff'
alias gdb='git delbranch'
alias gdc='git diff --cached'

alias gf='git fix'
alias gg='git grep --ignore-case'
alias gh='git hub'
alias gl='git latest'
alias glm='gl --no-merges'
alias glmm='glm master..'
alias gm='git merge'

alias gn='git noff'
alias gnb='git newbranch'

alias gp='git push'
alias gpta='git push && git push --tags'
alias gpf='git push --force'
alias gpl='git pull'
alias gpr='git pull --rebase'
alias gpuo='git push --set-upstream origin'

alias gr='git remote --verbose'
alias grso='git remote set-url origin'

alias gs='git status'
alias gt='git tag'
alias gu='git update'

##########################
# Gulp
##########################

alias g='gulp'

alias glh='gulp lint:html'
alias gli='gulp lint'
alias glj='gulp lint:js'
alias glp='gulp lint:php'
alias gls='gulp lint:sass'

alias gre='gulp release'
alias gv='gulp version'

##########################
# Hadolint
##########################

alias hadolint='docker run --rm -i hadolint/hadolint < Dockerfile'
alias dl='hadolint'

##########################
# Make
##########################

alias ml='make lint'
alias mt='make test'

##########################
# Packer
##########################

alias pk='packer'
alias pb='pk build'

alias pv="find *.packer.json | xargs -I % sh -c 'echo % && packer validate %'"
alias pkv='pv'

alias pbc='../../build.sh .'

##########################
# Papertrail
##########################

alias pt='papertrail'

##########################
# Python
##########################

alias pip='pip3'
alias python='python3'

alias pl='pylint lambda_function.py | less'
alias py='pl'

##########################
# Terminus (Pantheon CLI)
##########################

alias terminus='~/vendor/bin/terminus'

##########################
# Terraform
##########################

alias t='terraform'
alias tf='terraform'
alias tfv='tf version'

alias tfc='tf console'

alias ta='tf apply'
alias tfa='ta'
alias tat='ta -target'
alias tft='tf taint'
alias tanow='tf apply -var "apply_immediately=true"'

alias tfim='tf import'

alias tfi='tf init'
alias tfin='tf init'
alias ti='tf init'
alias tin='tf init'

alias tp='tf plan'
alias tfp='tf plan'
alias tpo='tp -out'

alias tu='tf force-unlock -force'
alias tfunlock='tu'
alias tv='tf validate'

alias tfo='tf output'

alias tflint='docker run --rm --tty --volume "$( pwd )":/data wata727/tflint --error-with-issues --quiet'
alias tfl='tflint'

alias tia='ti && ta'
alias tfsm='tf state mv'

alias tfsp='tf state pull > /tmp/state && code /tmp/state'

##########################
# Travis CI CLI
##########################

# See also: sensitive aliases in .env for encrypting common values.

alias te='travis encrypt'
alias tmo='travis monitor'

##########################
# Vagrant
##########################

alias vg='vagrant'

alias vgu='vg up'
alias vgup='vg up'
alias vgupp='vg up --provision'

alias vgs='vg suspend'
alias vgdown='vg suspend'

alias vgd='vg destroy'
alias vgr='vg reload'

alias vggs='vg global-status'

##########################
# Webpack
##########################

alias webpack='yarn webpack'
alias yw='yarn webpack'

##########################
# Yarn
##########################

alias y='yarn'
alias ya='yarn add'
alias yb='yarn build'
alias ye='yarn execute'
alias yf='yarn fix'
alias yl='yarn lint'
alias yp='yarn publish'
alias yt='yarn test'
alias yut='yarn unit-tests'
alias yit='yarn integration-tests'
alias yet='yarn e2e-tests'
alias ylt='yarn lint && yarn test'
